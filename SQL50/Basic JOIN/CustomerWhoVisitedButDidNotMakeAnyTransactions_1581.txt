Table: Visits

+-------------+---------+
| Column Name | Type    |
+-------------+---------+
| visit_id    | int     |
| customer_id | int     |
+-------------+---------+
visit_id is the column with unique values for this table.
This table contains information about the customers who visited the mall.
 

Table: Transactions

+----------------+---------+
| Column Name    | Type    |
+----------------+---------+
| transaction_id | int     |
| visit_id       | int     |
| amount         | int     |
+----------------+---------+
transaction_id is column with unique values for this table.
This table contains information about the transactions made during the visit_id.
 

Write a solution to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.

=======================================================================================================================================================

# My First Attempt
# SELECT v.customer_id, COUNT(v.customer_id) AS count_no_trans
# FROM Visits v
# LEFT JOIN Transactions t 
#     ON v.visit_id = t.visit_id 
# WHERE transaction_id IS NULL
# GROUP BY v.customer_id

# GPT
# Using the NOT EXISTS approach can be more optimal in some scenarios, particularly when dealing with large datasets and depending on the efficiency of the database engine's query optimization.
SELECT V.customer_id, COUNT(V.customer_id) AS count_no_trans
FROM Visits V
WHERE NOT EXISTS (
    SELECT 1
    FROM Transactions T
    WHERE T.visit_id = V.visit_id
)
GROUP BY V.customer_id;