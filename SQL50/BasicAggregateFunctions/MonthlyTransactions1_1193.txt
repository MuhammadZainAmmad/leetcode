Table: Transactions

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| id            | int     |
| country       | varchar |
| state         | enum    |
| amount        | int     |
| trans_date    | date    |
+---------------+---------+
id is the primary key of this table.
The table has information about incoming transactions.
The state column is an enum of type ["approved", "declined"].
 

Write an SQL query to find for each month and country, the number of transactions and their total amount, the number of approved transactions and their total amount.

=============================================================================================================================================

# MyApproach: wrote two separate queries than joined them 
SELECT allTransac.month, allTransac.country, allTransac.trans_count, allTransac.trans_total_amount, 
COALESCE(approvedTransac.approved_count, 0) AS approved_count, 
COALESCE(approvedTransac.approved_total_amount, 0) AS approved_total_amount
FROM
    (SELECT 
        country,
        LEFT(trans_date, 7) AS month,
        COUNT(id) AS trans_count, 
        SUM(amount) AS trans_total_amount
    FROM Transactions
    GROUP BY LEFT(trans_date, 7), country) AS allTransac
LEFT JOIN 
    (SELECT 
        country,
        LEFT(trans_date, 7) AS month,
        COUNT(id) AS approved_count, 
        SUM(amount) AS approved_total_amount
    FROM Transactions 
    WHERE state = 'approved'
    GROUP BY LEFT(trans_date, 7), country) AS approvedTransac
USING(month, country)

# From solution tab but slower than mine
SELECT  
    LEFT(trans_date, 7) AS month,
    country, 
    count(id) AS trans_count, 
    SUM(CASE WHEN state = 'approved' then 1 else 0 END) AS approved_count,
    SUM(amount) AS trans_total_amount, 
    SUM(CASE WHEN state = 'approved' then amount else 0 END) AS approved_total_amount
FROM Transactions
GROUP BY month, country